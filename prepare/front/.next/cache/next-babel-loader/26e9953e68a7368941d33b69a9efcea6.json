{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ijin-a/Desktop/2021_react_lab/react-nodebird/prepare/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []); // const id = me && me.id \n  // const id = me?.id\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 40\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: post.meta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \" \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"uF07kN5rms8LiOuhwqrtW4RLBE0=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/ijin-a/Desktop/2021_react_lab/react-nodebird/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","PropTypes","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","useSelector","PostImages","CommentForm","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","meta","Comments","length","item","content","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Popover, Button, Avatar,List, Comment } from \"antd\"\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone , MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\"\nimport { useSelector } from \"react-redux\";\n\nimport PostImages from \"./PostImages\"\nimport CommentForm from \"./CommentForm\"\n\nconst PostCard = ({post}) => {\n\n    const id = useSelector((state) => state.user.me?.id);\n\n    const [ liked, setLiked ] = useState(false)\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const onToggleLike = useCallback(() => {\n        setLiked((prev) => !prev)\n    }, [])\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened((prev) => !prev)\n    }, [])\n    // const id = me && me.id \n    // const id = me?.id\n\n    return (\n        <div style={{ marginBottom: 20}}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\"/>,\n                    liked \n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {\n                            id && post.User.id === id ?\n                                (<>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\">삭제</Button>  \n                                </>) : <Button>신고</Button>\n                            }                           \n                                                 \n                                                        \n                        </Button.Group>\n                    )} >\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}>\n                <Card.Meta \n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.meta} />\n            </Card>\n                {commentFormOpened && (\n                    <>\n                        <CommentForm post={post} />\n                        <List\n                            header={`${post.Comments.length} 댓글`}\n                            itemLayout=\"horizontal\"\n                            dataSource={post.Comments}\n                            renderItem={(item) => (\n                            <li>\n                                <Comment\n                                author={item.User.nickname}\n                                avatar={(\n                                    <Avatar>{item.User.nickname[0]}</Avatar>\n                                )}\n                                content={item.content}\n                                />\n                            </li>\n                            )}\n                        />\n                    </>\n                )}\n            {/* <CommentForm></CommentForm> */}\n            {/* <Comments></Comments> */}\n        </div>\n    )   \n}\n\nPostCard.propTypes = {\n    post : PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired\n}\n\nexport default PostCard"]},"metadata":{},"sourceType":"module"}