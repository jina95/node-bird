{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// next 는 pages 안에 있는 파일들을 개별적인 페이지로 만들어준다. ( 코드스플리팅 된 컴포넌트로 만들어 줌 )\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/postForm\";\nimport PostCard from \"../components/PostCard\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPost = _useSelector2.mainPost; // AppLayout 내에 감싸진애들이 children 이 된다.\n\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 30\n    }, _this), mainPost.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 38\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"1EXwPJ/TMXUabw3z6qJ1xQy5gMc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/pages/index.js"],"names":["React","useSelector","AppLayout","PostForm","PostCard","Home","state","user","isLoggedIn","post","mainPost","map","id"],"mappings":";;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,qBACQJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADnB;AAAA,MACPC,UADO,gBACPA,UADO;;AAAA,sBAEMP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAFjB;AAAA,MAEPC,QAFO,iBAEPA,QAFO,EAIf;;;AACA,sBACI,QAAC,SAAD;AAAA,eACMF,UAAU,iBAAK,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADrB,EAEME,QAAQ,CAACC,GAAT,CAAa,UAACF,IAAD;AAAA,0BAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,eAAV;AAAA,KAAb,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAZD;;GAAMP,I;UACqBJ,W,EACFA,W;;;KAFnBI,I;AAcN,eAAeA,IAAf","sourcesContent":["// next 는 pages 안에 있는 파일들을 개별적인 페이지로 만들어준다. ( 코드스플리팅 된 컴포넌트로 만들어 줌 )\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\"\nimport PostForm from \"../components/postForm\";\nimport PostCard from \"../components/PostCard\";\n\n\nconst Home = () => {\n    const { isLoggedIn } = useSelector((state) => state.user)\n    const { mainPost } = useSelector((state) => state.post)\n\n    // AppLayout 내에 감싸진애들이 children 이 된다.\n    return (\n        <AppLayout>\n            { isLoggedIn &&  <PostForm />}\n            { mainPost.map((post) => <PostCard key={post.id} post={post} />)}\n            \n        </AppLayout>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}