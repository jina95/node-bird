{"ast":null,"code":"import { all, fork, call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","call","put","takeLatest","axios","addPostAPI","data","post","addPost","action","result","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAmBC,MAAnB,EAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,UAAD,EAAaI,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAMM,GAAN,EAAW;AACT,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAGD,UAAUQ,YAAV,GAAyB;AACrB,QAAMX,UAAU,CAAC,kBAAD,EAAqBK,OAArB,CAAhB;AACH;;AAGD,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMhB,GAAG,CAAC,CACNC,IAAI,CAACc,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\"\n\nfunction addPostAPI (data) {\n    return axios.post(\"/api/post\", data)\n}\n\nfunction* addPost (action) {\n    try {\n        const result = yield call(addPostAPI, action.data)\n        yield put({\n            type: \"ADD_POST_SUCCESS\",\n            data: result.data\n        })\n    } catch(err) {\n        yield put({\n            type: \"ADD_POST_FAILURE\",\n            data: err.response.data\n        })\n    }\n    \n}   \n\n\nfunction* watchAddPost() {\n    yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost)\n    ])\n}"]},"metadata":{},"sourceType":"module"}