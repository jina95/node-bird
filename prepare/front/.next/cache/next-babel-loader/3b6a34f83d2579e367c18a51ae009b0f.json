{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\"; // const initialState = {\n//     name: \"Mia\",\n//     age: 27,\n//     password: \"babo\"\n// }\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPost: []\n  }\n};\nexport const loginAction = data => {\n  return {\n    type: \"LOG_IN\",\n    data\n  };\n};\nexport const logoutAction = data => {\n  return {\n    type: \"LOG_OUT\",\n    data\n  };\n}; // action creator\n\nconst changeName = () => {\n  return {\n    type: \"CHANGE_NAME\"\n  };\n};\n\nchangeName(\"BBBil\"); // (이전상태, 액션) => 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log();\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/ijin-a/Desktop/2021_react_lab/react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","loginData","post","mainPost","loginAction","data","type","logoutAction","changeName","rootReducer","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB,C,CAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADW;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAPW,CAArB;AAYA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,YAAY,GAAIF,IAAD,IAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE,SADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM,C,CAOP;;AACA,MAAMG,UAAU,GAAG,MAAM;AACrB,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMAE,UAAU,CAAC,OAAD,CAAV,C,CAGA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKV,OAAL;AACIgB,MAAAA,OAAO,CAACC,GAAR;AACA,6CAAYH,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AACJ,SAAK,QAAL;AACI,6CACGJ,KADH;AAEAZ,QAAAA,IAAI,kCACGY,KAAK,CAACZ,IADT;AAEAC,UAAAA,UAAU,EAAE,IAFZ;AAGAD,UAAAA,IAAI,EAAEa,MAAM,CAACN;AAHb;AAFJ;;AASJ,SAAK,SAAL;AACI,6CACGK,KADH;AAEAZ,QAAAA,IAAI,kCACGY,KAAK,CAACZ,IADT;AAEAC,UAAAA,UAAU,EAAE,KAFZ;AAGAD,UAAAA,IAAI,EAAE;AAHN;AAFJ;;AASJ;AACA,aAAOY,KAAP;AAzBJ;AA2BH,CA5BD;;AA8BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\n\n// const initialState = {\n//     name: \"Mia\",\n//     age: 27,\n//     password: \"babo\"\n// }\nconst initialState = {\n    user: {\n        isLoggedIn: false,\n        user: null,\n        signUpData: {},\n        loginData: {}\n    },\n    post: {\n        mainPost: []\n    }\n}\n\nexport const loginAction = (data) => {\n    return {\n        type: \"LOG_IN\",\n        data\n    }\n}\nexport const logoutAction = (data) => {\n    return {\n        type: \"LOG_OUT\",\n        data\n    }\n}\n\n// action creator\nconst changeName = () => {\n    return {\n        type: \"CHANGE_NAME\",\n    }\n}\n\nchangeName(\"BBBil\")\n\n\n// (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case HYDRATE : \n            console.log()\n            return { ...state, ...action.payload}\n        case \"LOG_IN\" :\n            return {\n            ...state,\n            user: {\n                ...state.user,\n                isLoggedIn: true,\n                user: action.data\n            }\n            \n        }\n        case \"LOG_OUT\" :\n            return {\n            ...state,\n            user: {\n                ...state.user,\n                isLoggedIn: false,\n                user: null\n            }\n            \n        }\n        default :\n        return state\n    }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}