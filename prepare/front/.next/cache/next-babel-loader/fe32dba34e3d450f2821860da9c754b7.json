{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중 ( 로딩창 )\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중 ( 로딩창 )\n  logOutDone: false,\n  logOutFailure: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpFailure: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const FLLOW_REQUEST = \"FLLOW_REQUEST\";\nexport const FLLOW_SUCCESS = \"FLLOW_SUCCESS\";\nexport const FLLOW_FAILURE = \"FLLOW_FAILURE\";\nexport const UNFLLOW_REQUEST = \"UNFLLOW_REQUEST\";\nexport const UNFLLOW_SUCCESS = \"UNFLLOW_SUCCESS\";\nexport const UNFLLOW_FAILURE = \"UNFLLOW_FAILURE\";\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'Skarsgard'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutFailure","signUpLoading","signUpDone","signUpFailure","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FLLOW_REQUEST","FLLOW_SUCCESS","FLLOW_FAILURE","UNFLLOW_REQUEST","UNFLLOW_SUCCESS","UNFLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","isLoggingIn","isLoggedIn","nickname","isLoggingOut"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,KADU;AACH;AACrBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,UAAU,EAAE,IAHY;AAIxBC,EAAAA,aAAa,EAAE,KAJS;AAIF;AACtBC,EAAAA,UAAU,EAAE,KALY;AAMxBC,EAAAA,aAAa,EAAC,IANU;AAOxBC,EAAAA,aAAa,EAAE,KAPS;AAQxBC,EAAAA,UAAU,EAAE,KARY;AASxBC,EAAAA,aAAa,EAAE,IATS;AAUxBC,EAAAA,EAAE,EAAE,IAVoB;AAWxBC,EAAAA,UAAU,EAAE,EAXY;AAYxBC,EAAAA,SAAS,EAAE;AAZa,CAArB;AAgBP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAGP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEjB,cADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,mBAAmB,GAAIF,IAAD,IAAU;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEd,eADH;AAEHa,IAAAA;AAFG,GAAP;AAIH,CALM;;AAOP,MAAMG,OAAO,GAAG,CAAEC,KAAK,GAAGjC,YAAV,EAAwBkC,MAAxB,KAAmC;AAC/C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAKjB,cAAL;AACI,6CACOoB,KADP;AAEIE,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKrB,cAAL;AACI,6CACOmB,KADP;AAEIE,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAII1B,QAAAA,EAAE,kCAAOwB,MAAM,CAACL,IAAd;AAAoBQ,UAAAA,QAAQ,EAAE;AAA9B;AAJN;;AAMJ,SAAKtB,cAAL;AACI,6CACOkB,KADP;AAEIE,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;;AAKJ,SAAKpB,eAAL;AACI,6CACOiB,KADP;AAEIK,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAKrB,eAAL;AACI,6CACOgB,KADP;AAEIK,QAAAA,YAAY,EAAE,KAFlB;AAGIF,QAAAA,UAAU,EAAE,KAHhB;AAII1B,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAKQ,eAAL;AACI,6CACOe,KADP;AAEIK,QAAAA,YAAY,EAAE;AAFlB;;AAIJ;AACA,aAAOL,KAAP;AArCJ;AAuCH,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    logInLoading: false, // 로그인 시도중 ( 로딩창 )\n    logInDone: false,\n    logInError: null,\n    logOutLoading: false, // 로그아웃 시도중 ( 로딩창 )\n    logOutDone: false,\n    logOutFailure:null,\n    signUpLoading: false,\n    signUpDone: false,\n    signUpFailure: null,\n    me: null,\n    signUpData: {},\n    loginData: {}\n    \n}\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\"\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\"\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\"\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\"\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\"\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\"\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\"\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\"\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\"\n\nexport const FLLOW_REQUEST = \"FLLOW_REQUEST\"\nexport const FLLOW_SUCCESS = \"FLLOW_SUCCESS\"\nexport const FLLOW_FAILURE = \"FLLOW_FAILURE\"\n\nexport const UNFLLOW_REQUEST = \"UNFLLOW_REQUEST\"\nexport const UNFLLOW_SUCCESS = \"UNFLLOW_SUCCESS\"\nexport const UNFLLOW_FAILURE = \"UNFLLOW_FAILURE\"\n\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data\n    }\n}\nexport const logoutRequestAction = (data) => {\n    return {\n        type: LOG_OUT_REQUEST,\n        data\n    }\n}\n\nconst reducer = ( state = initialState, action) => {\n    switch(action.type){\n        case LOG_IN_REQUEST :\n            return {\n                ...state,\n                isLoggingIn: true,\n            }     \n        case LOG_IN_SUCCESS :\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: true,\n                me: { ...action.data, nickname: 'Skarsgard'}\n            }     \n        case LOG_IN_FAILURE :\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false,\n            }     \n        case LOG_OUT_REQUEST :\n            return {\n                ...state,\n                isLoggingOut: true,\n            }\n        case LOG_OUT_SUCCESS :\n            return {\n                ...state,\n                isLoggingOut: false,\n                isLoggedIn: false,\n                me: null\n            }\n        case LOG_OUT_FAILURE :\n            return {\n                ...state,\n                isLoggingOut: false,\n            }\n        default: \n        return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}