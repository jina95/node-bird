{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/components/CommentForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useInput from \"./hooks/useInput\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  console.log(post.id);\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1000\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useState","PropTypes","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","console","log","id","dispatch","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGN,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeJ,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEK,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCZ,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACL,IAAlB,CAAzD;AAEA,QAAM,CAACU,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDjB,QAAQ,CAAC,EAAD,CAAnE;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGgB,cAAH,EAAmB;AACjBI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGtB,WAAW,CAAC,MAAM;AAExCa,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEhB,mBADC;AAEPiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEN,WAAX;AAAwBO,QAAAA,MAAM,EAAEjB,IAAI,CAACG,EAArC;AAAyCe,QAAAA,MAAM,EAAEf;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACO,WAAD,EAAcP,EAAd,CANgC,CAAnC;AASA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEV,WAAhC;AAA6C,QAAA,QAAQ,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,UAAAA,MAAM,EAAC;AAAtD,SAAf;AAA6E,QAAA,IAAI,EAAC,SAAlF;AAA4F,QAAA,QAAQ,EAAC,QAArG;AAA8G,QAAA,OAAO,EAAEd,iBAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA/BD;;AAiCAV,WAAW,CAACyB,SAAZ,GAAwB;AACtBxB,EAAAA,IAAI,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useInput from \"./hooks/useInput\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  console.log(post.id)\n  const dispatch = useDispatch()\n  const id = useSelector((state) => state.user.me?.id)\n  const { addCommentDone, addCommentLoading } = useSelector((state) => state.post)\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if(addCommentDone) {\n      setCommentText(\"\")\n    }\n  }, [addCommentDone])\n\n  const onSubmitComment = useCallback(() => {\n\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id }\n    })\n  }, [commentText, id]);\n\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n        <Button style={{ position: 'absolute', right: 0, bottom: -40, zIndex:1000 }} type=\"primary\" htmlType=\"submit\" loading={addCommentLoading}>삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}