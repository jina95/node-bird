{"ast":null,"code":"import { all, fork, call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/ijin-a/Desktop/github-react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","call","put","takeLatest","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","addPostAPI","data","post","addPost","action","delay","type","err","error","response","addCommentAPI","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,QAAyF,kBAAzF;;AAEA,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAON,KAAK,CAACO,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAmBC,MAAnB,EAA2B;AACvB,MAAI;AACA;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMZ,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEV;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAMW,GAAN,EAAW;AACT,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAET,gBADA;AAENW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;AAFd,KAAD,CAAT;AAIH;AAEJ;;AAED,SAASS,aAAT,CAAwBT,IAAxB,EAA8B;AAC1B,SAAON,KAAK,CAACO,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUU,UAAV,CAAsBP,MAAtB,EAA8B;AAC1B,MAAI;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMZ,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEM;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAML,GAAN,EAAW;AACT,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEO,mBADA;AAENL,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;AAFd,KAAD,CAAT;AAIH;AAEJ;;AAGD,UAAUa,YAAV,GAAyB;AACrB,QAAMpB,UAAU,CAACI,gBAAD,EAAmBK,OAAnB,CAAhB;AACH;;AAED,UAAUY,eAAV,GAA4B;AACxB,QAAMrB,UAAU,CAACK,mBAAD,EAAsBY,UAAtB,CAAhB;AACH;;AAGD,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAM1B,GAAG,CAAC,CACNC,IAAI,CAACuB,YAAD,CADE,EAENvB,IAAI,CAACwB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\"\n\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST} from \"../reducers/post\"\n\nfunction addPostAPI (data) {\n    return axios.post(\"/api/post\", data)\n}\n\nfunction* addPost (action) {\n    try {\n        // const result = yield call(addPostAPI, action.data)\n        yield delay(1000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n        })\n    } catch(err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: err.response.data\n        })\n    }\n    \n}   \n\nfunction addCommentAPI (data) {\n    return axios.post(\"/api/post\", data)\n}\n\nfunction* addComment (action) {\n    try {\n        yield delay(1000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n        })\n    } catch(err) {\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: err.response.data\n        })\n    }\n    \n}   \n\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment)\n    ])\n}"]},"metadata":{},"sourceType":"module"}